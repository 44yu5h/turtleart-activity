116

ENHANCEMENTS
* New translations

BUG FIX
* Fixed problem with generation of i18n strings

115

ENHANCEMENTS
* Support for light sensor on XO 1.75 hardware
* New translations

BUG FIXES
* Returning float values from sensors as per OLPC #11166

114

ENHANCEMENTS
* Toolbar cleanup to be consistent with new design-team guidelines
* Support for accelerometer on XO 1.75 hardware

BUG FIXES
* Fixed race-condition that sometimes prevented turtle art from
  launching (#3044)

113

ENHANCEMENTS
* Enabled scaling of box-style-media (used to improve the display of
  currency with currency plug-in)
  See http://wiki.sugarlabs.org/go/Activities/TurtleArt#currency
* Update to mn translations

BUG FIXES
* Re-enabled initial setting of a default Palette Toolbar
 (accidentally removed in Version 111 when fixing keyboard acceleration
 problem #2986)
* Fixed problem with scaling some blocks with image overlays

112

ENHANCEMENTS
* Updates to German (DE) and Dutch (NL) translations
* Clean up of block "skin" code to better accomodate plugins
* New currency plugin available in wiki

111

ENHANCEMENTS
* New sample program: urban_landscapes.ta
* New sample program: fractions.ta
* New python block example for csound
* Translation updates for .de

BUG FIXES
* Reverted default action name to 'action' instead of 'stack'
* Reverted accelerator-key work-around (#2050) in light of #2986

110

BUG FIX
* Fixed regression problem with brightness block

109

ENHANCEMENTS

* CM coordinate grid overlay (XO hardware only)

BUG FIXES
* Restored missing localization files
* Only initialize camera if camera block is being used
* Suppress unnecessary debug output from talogo
* Fix hardware detection on some old builds

108

ENHANCEMENTS

* vspace, hspace run stack on mouse click (#2790)
* added clear all button to Trash Palette
* added language support to speak.py sample code
* added 'scratch' and 'hoops' examples

BUG FIXES

* Save to SVG was not working for setxy
* Save to SVG was not working for fill
* Save to SVG was broken for arc

107

ENHANCEMENTS

* Refactoring of block and palette generation to use the plugin
  classes for all blocks. (The goal is to make it easier for end-user
  modifications.)
* Added the ability to add new blocks on the fly (See uturn.py example)
* Added basic-style-3arg block (used by NXT plugin)
* Moved plugin libraries to ./plugins
* Shared turtles are updated after mouse drag (#2687)
* Shared turtles cannot be repositioned remotely (#2687)
* Shared turtles have labels
* Turtles are synchronized when joining share (#2687)
* Comments on usage included in the Python sample code (#2709)
* Using standard Sugar icons for colors and camera
* Refactoring of export Logo code to enable plugins to define new functions
* Value blocks updated properly on first appearance
* Reduced the header size in Python sample code for easier reading (#2748)
* Extend clearscreen to entire canvas (#2745)
* Cleaned up some issues with .es translations (Guzman Trinidad)
* More robust handling of broken projects and unknown block types
* Added hidden blocks when plugin devices are unavailable
* Added new Python example for recording audio

BUG FIXES

* Fixed regression with help messages when running Sugar 0.84 (#2676)
* Fixed problem with selected turtle reverting back to default turtle (#2687)
* Fixed problem with camera block graphic in trash (#2678)
* Fixed regression with camera_plugin after refactoring (#2689)
* Fixed problem with saving/loading extra turtles when nick changes (#2441)
* Fixed problem with displaying large FILO heap (#2751)
* Fixed a problem with tags causing malformed HTML export
* Fixed problem with first sample when using sensors
* Fixed problem with method-name conflict with gtk.widget

PYTHON CODE CHANGE

* Userdefined code gets TurtleWindow instance rather than LogoCode
  instance as first argument. This change was made in order to better
  accommodate and better parallel the new plugin mechanism. Most
  likely, you had been referencing tw, the TurtleWindow instance from
  lc, the LogoCode instance, e.g., lc.tw. Now you can reference tw
  directly, e.g., tw. To reference lc, use tw.lc. Under most
  circumstances, Turtle Art will detect when myblock is looking for lc
  rather than tw and it will pass the correct argument.

106

ENHANCEMENTS

* Added sharing to draw_text, fill_polygon, draw_pixbuf (#2461)
* Added sharing (EXPERIMENTAL) between Gnome and Sugar versions (with Raul
  Gutierrez Segales)
* Added 'time' block for measuring elapsed time (in seconds)
* Added 'brightness' block for reading average camera luminance value
  (with help from Tony Forster and Guzman Trinidad)
* Added camera media block for grabbing images from the camera
* New speak.py sample code for doing text to speech (Tony Forster)
* New load_block.py sample code for programatically creating TA projects
* New psuedo-color.ta example (Tony Forster)
* New love-speaks-volumes.ta example -- use mic input to scale shapes
* New spiralaterals.ta example inspired by Spiralaterals activity
* Added a Media Palette for all media-related blocks and reorganized palettes
  (#2633) for more clarity (Claudia Urrea and Bill Kerr)
* Added offset for second argument in Boolean compare blocks
* More complete translations in Spanish (es) and Italian (it)
* Added plugin support for non-standard devices (camera, sensors, RFID)

BUG FIXES

* Exposed see as an external method (#2542)
* Media type tests on file suffix use lower()
* Added support for localization to GNOME version (Raul Gutierrez Segales)
* Work around for situations where gst is not available
* Fixed problem with displaying Journal preview images in portfolio
* Restore overlay grids on clear
* Fixed problem with help-string wrap width (#2633)
* Added missing dependency to RFID plugin (Emiliano Pastorino)

105

BUG FIXES

* Fixed problem with coordinate overlay mislabelling when rescaling coordinates
* Fixed overflow problem causing Turtle Art to crash after ~50 minutes (#2489)
* Fixed regression with turtle display during Wait
* Display heap with ellipsis to avoid illegible display (#2268)
* New block-highlight scheme (#1709) (with help from Rodrigo Arboleda)

ENHANCEMENTS

* Added support for RFID tag reader (with help from Emiliano Pastorino)
* Added 'Media Wait' block to pause turtle while media is playing

104

BUG FIXES

* Refactoring of audio/video code based on Jukebox (#1613)
* Catch depreciated format during project load (#2501, #2447)
* Reorganized some palettes (flow, portfolio) to fit smaller screen sizes
* Map mouse coordinates to screen coordinates (#2502)
* Also closed #2490, #2475, #2449, and #1057

ENHANCEMENTS

* Sample Python code stored in individual files
* New sample Python code (#548): (copy/paste heap to/from clipboard
  and to/from Journal)
* Sensor calibration for XO 1.5 hardware (Tony Forster)
* Text-only support for RTF files (#893)
* Block at bottom of stack is hidden when stack is 'collapsed' (#2506)
* Palette hides on repeat click of selector (#2505)
* Elimination of redundant Hide Palette button (#2505)
* Spanish translation of new blocks

103

* sensor palette: sound, volume, pitch, resistance, voltage
* menu cleanup: samples on import/export toolbar
* error message when trying to mix and match incompatible blocks
* new DE translations

102

* fixed bug with refactoring of depreciated setxy block

101

* set text color to foreground color (#2448)
* more resilience to bad block descriptions (#2447)
* fixed typo in Python sample code (#2449)
* only allow one start block per project
* show box values on box label
* moved import/export functions off activity toolbar onto journal toolbar
* new DE translations

100

* fixed problem with turtle reskin when scale <= 1 (#2353)
* fixed problems with keyboard commands (#2426)
* documented keyboard shortcuts (Thanks to Tony Forster) See
      http://wiki.sugarlabs.org/go/Activities/TurtleArt#Keyboard_shortcuts
* view source shows project code instead of Logo code (#2204)
* project code has improved formatting for readability (#2204)
* chooser limits choices appropriately, e.g., when looking for Python code,
  it only shows you .py files.
* fixed math Name error problem with imported Python code (#2313)

99

* reskinable turtle (#2353)
* setxy honors pen up/pen down (#2358)
* updated Tamil, Spanish (#2359), and German translations
* expandable two-argument blocks (#2330, #2336)
* updated samples to take advantage of #2330 and removed extra turtles
* removed import numpy to fix #2313 and #2314
* fixed rounding error that prevented max value from being returned by
  random (#2380)
* added locale support for decimal_point rendering

98

* fixed palette selection bug introduced by alpha-value checking

97

* recenter default turtle when dragged onto palette
* removed comment label from collapsible stacks
* made font smaller on the bottom-of-collapsible-stack block (#2305)
* rgs fixed resume problem in GNOME version (#2293)
* checking alpha value to block 'hit' detection (fixes problem with
  selecting the wrong block when blocks wrap around each other).
* trap and display math errors in Python block (#2313)

96

* fixed deleted-turtle ghost bug

95

* some performance enhancements (block creation and stack dragging)
* removed depreciated field from desktop file (Luke Farone)
* fixed problem with setup.py in non-Sugar environments (Luke Farone)
* new example program for turtle sees block
* fixed broken clock example
* catch import error for upload (#2194)
* rescaling of read pixel values (#2188)
* turtle sees block takes into account gray and shade (#2188)
* hide extra turtles on clean (#2191)
* hide coordinate overlays on clean (#2191)
* reset scale, gray on clean (#2191)
* work-around to c-c/c-v toolbar bug (Raul Gutierrez #2050)
* writing config file in config directory (Luke Farone #2193)
* using turtle name to generate color for multiple turtles
* delete turtle when dragged onto the palette (#2191)

94

* added "turtle sees" block
* added read_pixel block
* updated sample images (smaller file sizes)
* updated license for sample images
* updated nl translation
* fixed path problem with Exec in desktop file (Matthew Gallagher)
* fixed path problem with icon in turtleart.py (Matthew Gallagher)
* moved modules to TurtleArt subdirectory
* limit size of upload file (Jamie Boisture)

93

* recenter overlays when window resizes (Jamie Boisture)
* added icon for Desktop mode (Jamie Boisture)
* support for project upload to server for Desktop mode (Jamie Boisture)

92

* fixed sharing bug introduced in v91
* cleaned up cmdline processing

91

* added black and white blocks
* fixed cgi escape bug (#1854)
* fixed bug with overzealous block resizing (#2092)
* speed up of refresh code (expose_cb handling)

90

* fixed problem with keyboard accelerators: Ctrl-C, Ctrl-V, and Alt-Return

89

* added non-interactive mode (with help from Jamie Boisture)
* fix problem with icon in F13
* block scale saved between sessions

88

* alsroot fixed ObjectChooser bug (#2002)

87

* added fill block
* added gray block
* fixed typo in sample code
* added mouse support to sample code (See
  http://tonyforster.blogspot.com/2010/03/mouse-support-in-turtleart.html)

86

* More .es updates

85

* Fixed bug loading floating point numbers from saved projects
* 'store in box' accepts strings and numbers as labels
* New .es translations

84

* merge with mainline

83

* added new user-interface features
 o support for multiple turtles
 o expandable blocks
 o collapsible stacks
 o runtime block highlighting
 o error highlighting
 o trash palette (with restore)
 o palette better integrated into Sugar toolbar
 o variable-length string blocks
 o editable string blocks
 o paste text from Sugar clipboard to string blocks
 o new prefix boolean logic
 o showblock to compliment hideblock
 o fullscreen block
 o Cartesian and polar coordinate blocks
 o color blocks
 o editable macros (used for presentation blocks)
 o labels on coordinate-grid overlays
 o more complete support in non-Sugar environments
 o new (and improved) sample code
 o Logo code for project added to View Source
 o save SVG block lets you generate SVG with Turtle Art
 o improved export-to-HTML logic
 o new translations
 o multi-variable in-line Python-code blocks
 o traceback for checking errors in in-line Python code

* completed a major refactoring of the code
 o download bundle-size is only 40% of previous versions
 o faster first-time launch
 o greatly simplified i18n maintenance
 o easier to extend with new blocks and palettes 

82

* minor updates to Spanish translations

81

* fixed keyboard input bug introduced in v79

80

* new Finnish translations

79

* backspace enabled when entering numbers
* arbitrarily long numeric strings enabled
* fixed Python error in sample code
* clean up of en artwork
* fix bug in load_image
* detecting XO 1.5 hardware for font-scaling problem
* keyboard and gamepad navigation
* expanded hover help
* better logic for block selection used by copy/paste

78

* new artwork for pen palette
* color blocks

77

* hide status block on start up
* save reference to Python code loaded from the Journal

76

* fixed import error in project
* fixed bullets in exporthtml
* added proper scaling for coordinate blocks
* moved status layer forward

75

* Cartesian coordinates overlay
* polar coordinates overlay
* coordinate display on View Toolbar
* Option to rescale coordinate system to 100x100 on View Toolbar
* Reordered the palettes (moved misc. down)

74

* load start block for new projects
* fixed bug with reloading descriptions from Journal
* added hover help to command line version
* initiate the import Python chooser when Python block is clicked
* saving pastable code to html export
* fixed some problems in export to HTML code

73

* raise status flag when catching overflow error
* clean up of de, it, fr, es artwork
* fixed bug related to blocks running off the left edge
* cleaned up command-line code

72

* cleaned up code for pre-0.86 palettes
* fixed keyboard shortcut bug in pre-0.86 palettes
* fixed problem with int(None) in unselect
* fixed problem with int(float) in unselect
* fixed fence-post problem with searching off the end of blocks
* work-around Rainbow problem with tmpfile

71

* updated fr translations
* more sample Python code
* limiting abs(number) to max of 1000000 to prevent OverflowErrors

70

* new translations/artwork for vi, it, fr
* added linewrap to help label (with rgs)
* added label to Help toolbar (to work around bug with small displays)
* caught some exceptions that prevented TA from running outside of Sugar
* fixed bug preventing simple save to HTML for pre-086 systems
* added missing icon for Save from Journal

69

* chmod +x svg factory
* added missing import gettext from talogo.py
* renamed xo-man to xo-child
* caught missing attribute when running from outside of Sugar
* new translations/artwork for de, fr, es, it
* added translator comments
* fixed several bugs in export to Logo code

68

* made case consistent on tool tips
* fixed bug re i18n in debug panel
* new artwork for es and fr
* fixed some problems with svg factory
* fixed bug in Export HTML
* fixed naming problem with all save_as functions
* fixed bug in Export Logo in regard to start block

67

* added mime-type icon
* changed keyboard shortcuts to use Ctrl instead of Alt as per guidelines
* fixed bug re wait time (now in seconds)
* fixed problem with fractional wait times
* fixed i18n problem with labels in hover help
* reorganization of extras palette
* fixed problem of empty file with "Save as HTML" (saving screen capture)

66

* fixed bug preventing launch on (0.82-0.84)
* work around Rainbow problem with Save as image
* fixed bug re activate Stop Button on launch (thanks to rgs)
* added open from journal button (with rgs)
* fixed bug re Erase Button (hides status blocks)
* cleaned up some broken sample code

65

* fixed problem with View Toolbar
* moved Samples button to Help Toolbar

64

* major refactoring for new toolbar design
* stop sign turns off after execution is finished
* added preliminary support for mg and ta
* moved hover help to help toolbar
* adjusted artwork on Turtle palette

63

* more sample programs
* consolidated samples into one directory
* fixed mask bug that prevented palette hiding

62

* first pass at hover help support (thanks Raul)
* put samples button, keep button on project toolbar
* fixed journal icons associated with HTML, Python, Logo
* improved compatibility with old Sugar builds
* images centered under turtle
* text vertically centered under turtle
* pop blocks snap into boxes
* improved masks for fewer block-selection errors


61

* fixed es translation 
* fixed problem with save/load on old systems

60

* fixed sharing bug
* began work on 701 backward compatibility
* added more debugging code

59

* fixed leading bug for OLPC XO portfolio
* enabled box to hold strings and journal objects

58

* fixed unicode string compare in equal block
* fixed journal description bug introduced in v55
* fixed misaligned myfunc block problem


57

* lots of artwork clean up
* elimination of lock block
* more dead key clean ups
* truncated strings

56

* more dead key cleanup
* empty (undefined) box error message

55

* dead key workaround

54

* debug button
* no more decimals by default for print

53

* es updates

52

* first attempt at fixing the mimetypes
* default behavior of tamyblock.py is to draw a dotted line

51

* caught ISO_Level3_Shift problem on OLPC XO keyboard

50

* fixed some problems with taexportlogo
* cleaned up save/load icons
* print uses title for Journal objects
* cleaned up movie window destroy code
* more consistent template management internally
* support of a sort for show in taexporthtml

49

* fixed character input bug

48

* reworking of media blocks
* json cleanup

47

* image export
* pot update

46

* full screen mode
* scrolled window
* better support for running from the command line

45

* alt chars for keyboard shortcuts
* visual feedback for user-defined blocks when "loaded"

44

* adding user defineable block

43

* new de artwork

42

* removed unneeded Numeric dependencies

41

* end run around addons bug?

40

* improvements to it artwork

39

* improvements to nl and sv artwork

38

* improvements to de artwork

37

* adding de sl sv
* cleaned up SVGs

36

* added el, vi, zh_TW

35

* updated depreciated fields in activity.info
* added svg/*.py files to generate svgs from .po
* added nl

34

* added it; cleaned up fr; converted to cjson (with help from silbe)

33

* merge with TAPortfolio (and elimination of Sensor and myblock features)

32

* rebase on TAPortfolio code

31

* run and step

30

* fixed broken POT file

29

* new artwork, better i18n

28

* added push and pop (en only)

27

* add named boxes and stacks

26

* allow new blocks to be created by clicking in addition to drag and drop

25

* added sensor panel from TurtleArt with Sensors
* catch exceptions where DC Audio is not available (non-OLPC_XO-1 hardware) 

24

* add UCB logo export
* check for conditions where image cache needs refreshing

23

* caching images

22

* added POT file

21

* added ru
* fixed errors in fr and mn

20

* fixed translation problem with Spanish "poner en caja"
* PT translation
* height = toolbox.get_size()[1]
* setyx
* adding po files

19

* removed "sugar.activity import registry"

18

* Finnish
* SVG cleanup

17

* SVG support
* support for non-1200x900 displays

16

* Mongolian

15

* shebang patch

14

* Changed more file permissions (-x)
* Deleted some redundant files (stray myblockgroup.gif files)
* Add #!/usr/bin/env python to taturtle.py

13

* Added Turkish (tr) artwork
* Changed permissions on artwork (-x)

12

* Added sqrt function

11

* Rename activity from TurtleArt to Turtle Art (dlo trac #2663)
* Fix pen up in arc (dlo trac #7656)
* Point update url at a protected page.

10

* licensing information in activity.info (dlo trac #6340)
* new samples
* improved icon (dlo trac #6836)

9

* added french images
* fixed a few typos
* fixed divide by zero bug

8

* added license

7

* simple i18n

6

* Graphics changes

5

* Multi instance happy
